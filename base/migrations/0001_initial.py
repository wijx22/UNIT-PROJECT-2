# Generated by Django 5.1.7 on 2025-03-30 00:09

import base.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WellnessPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the wellness place.', max_length=255, verbose_name='Place Name')),
                ('description', models.TextField(help_text='A detailed description of the wellness place.', verbose_name='Place Description')),
                ('content', models.TextField(default='', help_text='HTML content providing a detailed description of the wellness place.', verbose_name='Place Content')),
                ('location', models.CharField(choices=[('riyadh', 'Riyadh'), ('aseer', 'Aseer'), ('jeddah', 'Jeddah'), ('alula', 'Alula'), ('taif', 'Taif'), ('al-baha', 'Al baha')], help_text='The location of the wellness place.', max_length=50, verbose_name='Location')),
                ('image', models.URLField(help_text='A URL pointing to an image representing the wellness place.', max_length=1000, validators=[django.core.validators.URLValidator()], verbose_name='Place Image URL')),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='en', help_text='The primary language used at the wellness place.', max_length=2, verbose_name='Language')),
                ('experience_type', models.CharField(choices=[('mental_relaxation', 'راحة نفسية'), ('physical_recovery', 'استشفاء جسدي'), ('physical_activity', 'نشاط بدني')], help_text='The type of experience offered at the wellness place.', max_length=50, verbose_name='Experience Type')),
                ('health_condition', models.CharField(choices=[('stress', 'Stress'), ('pain', 'Pain'), ('sleep', 'Sleep'), ('fatigue', 'Fatigue'), ('digestive', 'Digestive'), ('energy', 'Energy')], help_text='The health condition supported by the wellness place.', max_length=50, verbose_name='Health Condition')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_type', models.CharField(choices=[('mental_relaxation', 'راحة نفسية'), ('physical_recovery', 'استشفاء جسدي'), ('physical_activity', 'نشاط بدني')], max_length=50)),
                ('health_conditions', models.CharField(choices=[('stress', 'Stress'), ('pain', 'Pain'), ('sleep', 'Sleep'), ('fatigue', 'Fatigue'), ('digestive', 'Digestive'), ('energy', 'Energy')], max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WellnessService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the wellness service.', max_length=255, verbose_name='Service Title')),
                ('description', models.TextField(help_text='A detailed description of the wellness service.', verbose_name='Service Description')),
                ('image', models.URLField(help_text='A URL pointing to an image representing the service.', max_length=1000, validators=[django.core.validators.URLValidator()], verbose_name='Service Image URL')),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic'), ('both', 'English & Arabic')], default='both', help_text='The primary language used at the wellness service.', max_length=4, verbose_name='Language')),
                ('duration', models.IntegerField(choices=[(30, '30 minutes'), (60, '60 minutes'), (90, '90 minutes'), (120, '120 minutes')], default=90)),
                ('group_size', models.IntegerField(choices=[(1, 'Solo'), (2, '2-4 people'), (5, '5-8 people'), (9, 'More than 8')], default=2)),
                ('availability', models.CharField(choices=[('daily', 'Daily'), ('weekends', 'Weekends'), ('weekdays', 'Weekdays')], default='daily', max_length=10)),
                ('place', models.OneToOneField(help_text='The wellness place associated with this service.', on_delete=django.db.models.deletion.CASCADE, related_name='service', to='base.wellnessplace', verbose_name='Wellness Place')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('group', 'جلسة جماعية'), ('private', 'تجربة خاصة'), ('consultation', 'استشارة مع أخصائي')], help_text='Type of session being booked.', max_length=20, verbose_name='Session Type')),
                ('booking_date', models.DateTimeField(auto_now_add=True, help_text='The date and time when the booking was created.', verbose_name='Booking Date')),
                ('full_name', models.CharField(default='', help_text='The full name of the user making the booking.', max_length=255, verbose_name='Full Name')),
                ('phone_number', models.CharField(default='', help_text='The phone number of the user.', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('preferred_date', models.DateField(blank=True, help_text='The preferred date for the session.', null=True, verbose_name='Preferred Date')),
                ('preferred_time', models.TimeField(blank=True, help_text='The preferred time for the session.', null=True, verbose_name='Preferred Time')),
                ('additional_notes', models.TextField(blank=True, default='', help_text='Any additional notes or details provided by the user.', null=True, verbose_name='Additional Notes')),
                ('booking_reference', models.CharField(default=base.models.generate_booking_reference, max_length=14, unique=True)),
                ('user', models.ForeignKey(help_text='The user who made the booking.', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('service', models.ForeignKey(help_text='The wellness service being booked.', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='base.wellnessservice', verbose_name='Service')),
            ],
        ),
        migrations.CreateModel(
            name='WhatToExpect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('wellness_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expectations', to='base.wellnessservice')),
            ],
        ),
    ]
